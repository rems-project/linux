// the kernel has a fancy scheme for generating macros with the offsets of structs so that they can be used inside asm. I've not tried to use that - instead, we'll just have indices.

#ifndef _GHOST_ASM_IDS_H
#define  _GHOST_ASM_IDS_H


//#define GHOST__INVALID__SYSREG 
#define GHOST_SP 1
//GHOST_EDSCR 
#define GHOST_HCR_EL2 2
#define GHOST_MAIR_EL2 3
#define GHOST_MDCR_EL2 4
//#define GHOST_MDCR_EL3 5
//#define GHOST_MDSCR_EL1 6   sysregs-sr.h common state
//#define GHOST_MPIDR_EL1 7   sysregs-sr.h el1 state
//#define GHOST_OSDLR_EL1 8      // OS Double Lock Register, not in sysregs-sr.h
//#define GHOST_OSLSR_EL1 9      // OS Lock Status Register, not in sysregs-sr.h
#define GHOST_PSTATE_DAIF 10
#define GHOST_PSTATE_CURRENTEL 11
//GHOST_PSTATE_NRW
#define GHOST_PSTATE_SPSEL 12
//#define GHOST_SCR_EL3 13
//#define GHOST_SCTLR_EL1 14   sysregs-sr.h el1 state
#define GHOST_SCTLR_EL2 15
//#define GHOST_TCR_EL1 16   sysregs-sr.h el1 state
#define GHOST_TCR_EL2 17
#define GHOST_TPIDR_EL2 18
#define GHOST_VTCR_EL2 19
#define GHOST_VTTBR_EL2 20
#define GHOST_TTBR0_EL2 21

#define GHOST_ELR_EL2 22
#define GHOST_ESR_EL2 23
#define GHOST_FAR_EL2 24
#define GHOST_HPFAR_EL2 25

// none of the ID registers are in sysregs-sr.h
//The AArch64 Auxiliary Feature registers
#define GHOST_ID_AA64AFR0_EL1 26
#define GHOST_ID_AA64AFR1_EL1 27
//The AArch64 Processor Feature registers
#define GHOST_ID_AA64PFR0_EL1 28
#define GHOST_ID_AA64PFR1_EL1 29
//The AArch64 Debug Feature registers
#define GHOST_ID_AA64DFR0_EL1 30
#define GHOST_ID_AA64DFR1_EL1 31
//The AArch64 Memory Model Feature registers
#define GHOST_ID_AA64MMFR0_EL1 32
#define GHOST_ID_AA64MMFR1_EL1 33
#define GHOST_ID_AA64MMFR2_EL1 34
//The AArch64 Instruction Set Attribute registers
#define GHOST_ID_AA64ISAR0_EL1 35
#define GHOST_ID_AA64ISAR1_EL1 36

#define GHOST_SPSR_EL2 37

#define GHOST_NR_SYSREGS 38




//GHOST_SP
//GHOST_PSTATE_DAIF
//GHOST_PSTATE_CURRENTEL
//GHOST_PSTATE_SPSEL

#define GHOST_EL2_REGS { \
  GHOST_HCR_EL2,	 \
  GHOST_MAIR_EL2,	 \
  GHOST_MDCR_EL2,	 \
  GHOST_SCTLR_EL2,	 \
  GHOST_TCR_EL2,	 \
  GHOST_TPIDR_EL2,	 \
  GHOST_VTCR_EL2,	 \
  GHOST_VTTBR_EL2,	 \
  GHOST_TTBR0_EL2,	 \
  GHOST_ELR_EL2,	 \
  GHOST_ESR_EL2,	 \
  GHOST_FAR_EL2,	 \
  GHOST_HPFAR_EL2,	 \
  GHOST_SPSR_EL2,        \
	  }

#ifndef __ASSEMBLY__
#include <asm/kvm_host.h>

#define __ID_NAME(x) [x]=#x
static const char *GHOST_EL2_REG_NAMES[] = {
  __ID_NAME(GHOST_SP),
  __ID_NAME(GHOST_HCR_EL2),
  __ID_NAME(GHOST_MAIR_EL2),
  __ID_NAME(GHOST_MDCR_EL2),
  __ID_NAME(GHOST_PSTATE_DAIF),
  __ID_NAME(GHOST_PSTATE_CURRENTEL),
  __ID_NAME(GHOST_PSTATE_SPSEL),
  __ID_NAME(GHOST_SCTLR_EL2),
  __ID_NAME(GHOST_TCR_EL2),
  __ID_NAME(GHOST_TPIDR_EL2),
  __ID_NAME(GHOST_VTCR_EL2),
  __ID_NAME(GHOST_VTTBR_EL2),
  __ID_NAME(GHOST_TTBR0_EL2),
  __ID_NAME(GHOST_ELR_EL2),
  __ID_NAME(GHOST_ESR_EL2),
  __ID_NAME(GHOST_FAR_EL2),
  __ID_NAME(GHOST_HPFAR_EL2),
  __ID_NAME(GHOST_ID_AA64AFR0_EL1),
  __ID_NAME(GHOST_ID_AA64AFR1_EL1),
  __ID_NAME(GHOST_ID_AA64PFR0_EL1),
  __ID_NAME(GHOST_ID_AA64PFR1_EL1),
  __ID_NAME(GHOST_ID_AA64DFR0_EL1),
  __ID_NAME(GHOST_ID_AA64DFR1_EL1),
  __ID_NAME(GHOST_ID_AA64MMFR0_EL1),
  __ID_NAME(GHOST_ID_AA64MMFR1_EL1),
  __ID_NAME(GHOST_ID_AA64MMFR2_EL1),
  __ID_NAME(GHOST_ID_AA64ISAR0_EL1),
  __ID_NAME(GHOST_ID_AA64ISAR1_EL1),
  __ID_NAME(GHOST_SPSR_EL2),
};

/* Helper prints of asm/kvm_host.h:enum vcpu_sysreg */
static const char *GHOST_VCPU_SYSREG_NAMES[] = {
	__ID_NAME(__INVALID_SYSREG__),
	__ID_NAME(MPIDR_EL1),
	__ID_NAME(CLIDR_EL1),
	__ID_NAME(CSSELR_EL1),
	__ID_NAME(SCTLR_EL1),
	__ID_NAME(ACTLR_EL1),
	__ID_NAME(CPACR_EL1),
	__ID_NAME(ZCR_EL1),
	__ID_NAME(TTBR0_EL1),
	__ID_NAME(TTBR1_EL1),
	__ID_NAME(TCR_EL1),
	__ID_NAME(ESR_EL1),
	__ID_NAME(AFSR0_EL1),
	__ID_NAME(AFSR1_EL1),
	__ID_NAME(FAR_EL1),
	__ID_NAME(MAIR_EL1),
	__ID_NAME(VBAR_EL1),
	__ID_NAME(CONTEXTIDR_EL1),
	__ID_NAME(TPIDR_EL0),
	__ID_NAME(TPIDRRO_EL0),
	__ID_NAME(TPIDR_EL1),
	__ID_NAME(AMAIR_EL1),
	__ID_NAME(CNTKCTL_EL1),
	__ID_NAME(PAR_EL1),
	__ID_NAME(MDSCR_EL1),
	__ID_NAME(MDCCINT_EL1),
	__ID_NAME(OSLSR_EL1),
	__ID_NAME(DISR_EL1),
	__ID_NAME(PMCR_EL0),
	__ID_NAME(PMSELR_EL0),
	__ID_NAME(PMEVCNTR0_EL0),
	__ID_NAME(PMEVCNTR30_EL0),
	__ID_NAME(PMCCNTR_EL0),
	__ID_NAME(PMEVTYPER0_EL0),
	__ID_NAME(PMEVTYPER30_EL0),
	__ID_NAME(PMCCFILTR_EL0),
	__ID_NAME(PMCNTENSET_EL0),
	__ID_NAME(PMINTENSET_EL1),
	__ID_NAME(PMOVSSET_EL0),
	__ID_NAME(PMUSERENR_EL0),
	__ID_NAME(APIAKEYLO_EL1),
	__ID_NAME(APIAKEYHI_EL1),
	__ID_NAME(APIBKEYLO_EL1),
	__ID_NAME(APIBKEYHI_EL1),
	__ID_NAME(APDAKEYLO_EL1),
	__ID_NAME(APDAKEYHI_EL1),
	__ID_NAME(APDBKEYLO_EL1),
	__ID_NAME(APDBKEYHI_EL1),
	__ID_NAME(APGAKEYLO_EL1),
	__ID_NAME(APGAKEYHI_EL1),
	__ID_NAME(ELR_EL1),
	__ID_NAME(SP_EL1),
	__ID_NAME(SPSR_EL1),
	__ID_NAME(CNTVOFF_EL2),
	__ID_NAME(CNTV_CVAL_EL0),
	__ID_NAME(CNTV_CTL_EL0),
	__ID_NAME(CNTP_CVAL_EL0),
	__ID_NAME(CNTP_CTL_EL0),
	__ID_NAME(RGSR_EL1),
	__ID_NAME(GCR_EL1),
	__ID_NAME(TFSR_EL1),
	__ID_NAME(TFSRE0_EL1),
	__ID_NAME(DACR32_EL2),
	__ID_NAME(IFSR32_EL2),
	__ID_NAME(FPEXC32_EL2),
	__ID_NAME(DBGVCR32_EL2),
	__ID_NAME(VPIDR_EL2),
	__ID_NAME(VMPIDR_EL2),
	__ID_NAME(SCTLR_EL2),
	__ID_NAME(ACTLR_EL2),
	__ID_NAME(HCR_EL2),
	__ID_NAME(MDCR_EL2),
	__ID_NAME(CPTR_EL2),
	__ID_NAME(HSTR_EL2),
	__ID_NAME(HACR_EL2),
	__ID_NAME(TTBR0_EL2),
	__ID_NAME(TTBR1_EL2),
	__ID_NAME(TCR_EL2),
	__ID_NAME(VTTBR_EL2),
	__ID_NAME(VTCR_EL2),
	__ID_NAME(SPSR_EL2),
	__ID_NAME(ELR_EL2),
	__ID_NAME(AFSR0_EL2),
	__ID_NAME(AFSR1_EL2),
	__ID_NAME(ESR_EL2),
	__ID_NAME(FAR_EL2),
	__ID_NAME(HPFAR_EL2),
	__ID_NAME(MAIR_EL2),
	__ID_NAME(AMAIR_EL2),
	__ID_NAME(VBAR_EL2),
	__ID_NAME(RVBAR_EL2),
	__ID_NAME(CONTEXTIDR_EL2),
	__ID_NAME(TPIDR_EL2),
	__ID_NAME(CNTHCTL_EL2),
	__ID_NAME(SP_EL2),
	__ID_NAME(CNTHP_CTL_EL2),
	__ID_NAME(CNTHP_CVAL_EL2),
	__ID_NAME(CNTHV_CTL_EL2),
	__ID_NAME(CNTHV_CVAL_EL2),
	__ID_NAME(NR_SYS_REGS)
};
#endif /* __ASSEMBLY__ */


#endif //  _GHOST_ASM_IDS_H
